 /*!
 *
 * ======================================================================
 * 00. BUTTONS
 * ====================================================================== https://codepen.io/Treehouse/pen/vEkit
 https://iamsteve.me/blog/entry/create_a_sass_button_element_mixin
 http://compass-style.org/reference/compass/typography/vertical_rhythm/
 // http://www.thesassway.com/intermediate/a-standard-module-definition-for-sass
 * https://codepen.io/wintr/pen/wWoRVW
 https://codepen.io/SamuelJanes/pen/woqjvK
 ** https://codepen.io/lukemeyrick/pen/qdxqwM
 */


// COLORS
$btn-bg: #999 !default;
  
$btn-blue: #4174d5;
$btn-orange: #ff9933;
$btn-green: #339900;
$btn-red: #ff6666;

//  %btn {
//     width: 100px;
//     text-align: center;
//     padding: 5px 0;
//     margin: 2px auto;
//     border-radius: 2px;
//     color: #FFFFFF;
//   }
  
//   .btn_success {
//     @extend %btn;
//     background-color: #108EFF;
//   }
//   .btn_alert {
//     @extend %btn;
//     background-color: #FF8516;
//   }
//   .btn_cancel {
//     @extend %btn;
//     background-color: #D61E20;
//   }

// .btn {
//   border: none;
//   border-radius: $base-radius;
//   cursor: pointer;
//   display: inline-block;
//   font-size: $fs-base;
//   font-weight: $fw-medium;
//   line-height: 2.5;
//   padding: 0 12px;
//   position: relative;
//   text-align: center;

//   // Color Variants
//   &--primary {
//     background: $clr-grey;
//   }

//   &--danger {
//     background: $clr-danger;
//   }

//   // Size Variants
//   &--small {
//     font-size: ($fs-base * 0.875);
//     line-height: 2.2;
//     padding: 0 12px;
//   }

//   &--large {
//     font-size: ($fs-base * 1.375);
//     line-height: 1.25;
//     padding: 16px 25px 17px;
//   }

//   // Type Variants
//   &--inverted {
//     background: $clr-white;
//     color: $clr-primary;
//   }

//   &--link {
//     background: $clr-white;
//     color: $clr-base;

//     &:hover {
//       text-decoration: underline;
//     }
//   }

//   &[disabled] {
//     background: $clr-grey;
//     cursor: not-allowed;
//   }
// }


/**
* BUTTON -> CHANGES STATES
* -------------------------------------------------------------------
*  Usage:
* .button .button--default
* .button .button--success
* .button .button--error
* .button .button--warning
* .button .button--info
*/

.btn {
  // general styling for all buttons
  border: none;
  border-radius: $base-radius;
  cursor: pointer;
  display: inline-block;
  font-size: $fs-base;
  font-weight: $fw-medium;
  line-height: 2.5;
  padding: 0 12px;
  position: relative;
  text-align: center;

  // Generates modifier classes for .btn
    @each $theme, $color in $colors-states {
      &--#{$theme} {
       background-color: $color;
       color: transparentize($white, .2);
     }
     &--#{$theme}:hover,
     &--#{$theme}:focus {
       background-color: shade($color, 20%);
       color: $white;
     }
    }
  }

/**
* BUTTON -> SOCIAL MEDIA
* -------------------------------------------------------------------
* Usage:
* .social-media-icon .social-media-icon--facebook
* .social-media-icon .social-media-icon--twitter
* .social-media-icon .social-media-icon--pinterest
* .social-media-icon .social-media-icon--youtube
*/

.social-media-icon {
  border-radius: 50%;
  padding: .5rem;
  text-align: center;
  background-size: cover;
  background-repeat: no-repeat;
  @each $theme, $color in $social-media-colors {
    &--#{$theme} {
      background-color: $color;
    }
  }
  @each $theme, $icon in $social-media-icons {
    &--#{$theme} {
      background-image: $icon;
      background-repeat: no-repeat;
      background-attachment: fixed;
    }
  }
}


/**
* BUTTON LINK
* -------------------------------------------------------------------
* Usage:
* button{@include link-button();}
*/

@mixin link-button() {
    overflow: visible; // Shrinkwrap the text in IE7-
    margin: 0;
    padding: 0;
    border: 0;
    color: blue; // Match your link colour
    background: transparent;
    font: inherit; // Inherit font settings (doesn’t work in IE7-)
    line-height: normal; // Override line-height to avoid spacing issues
    text-decoration: underline; // Make it look linky
    cursor: pointer; // Buttons don’t make the cursor change in all browsers
    -moz-user-select: text; // Make button text selectable in Gecko

    /* Remove mystery padding in Gecko browsers.
     * See https://bugzilla.mozilla.org/show_bug.cgi?id=140562
     */
    &::-moz-focus-inner {
        padding: 0;
        border: 0;
    }
}

/**
* BUTTON -> RESET
* -------------------------------------------------------------------
* 
* 
*/

@mixin button-reset {
	padding: 0;
	border: none;
	font: inherit;
	color: inherit;
	background-color: transparent;
	cursor: pointer;
}

/**
* BUTTON -> BACKGROUND
* -------------------------------------------------------------------
* Usage:
* @include button-bg(#2ecc71);
*/

@mixin button-bg($bg) {
	background: $bg;
	&:hover {
	  background:darken($bg,8%);
	  transition: all 0.3s ease;
	}
	&:active {
	  background:darken($bg,25%);
	} 
  }
  

//////


/**
* CREATE BUTTON
* -------------------------------------------------------------------
* Usage:
* @include button($red, normal, normal, normal);
*/

// Alternate Colors
$gold		    : rgb(234, 170, 0);
$purple		  : rgb(149, 149, 210);
$blue		    : rgb(7, 114, 206);
$lightblue	: rgb(65, 182, 230);
$green		  : rgb(100, 167, 11);
$red		    : rgb(218, 41, 28);
$black		  : rgb(0, 0, 0);
$white		  : rgb(255, 255, 255);

// Color Variations Array
$prefix: color;
$color-list: (
	'gold' $prefix $gold,
	'purple' $prefix $purple,
	'blue' $prefix $blue,
	'lightblue' $prefix $lightblue,
	'green' $prefix $green,
	'red' $prefix $red,
	'white' $prefix $white
);


@mixin button($button-color: $red, $button-type: '', $button-border: '', $button-size: '') {
	// Standard Button Styles
	@include border-radius(5px);
	@include transition(.3s ease-in-out);
	display: inline-block;
	border: 2px solid $button-color;
	padding: 10px 30px 8px;
	color: $button-color;
	text-decoration: none;
	text-transform: uppercase;
	font-weight: bold;
	// Button Hover Styles
	&:hover {
		border-color: $black;
		color: $black;
	}
	// Foreach Loop
	// Using the Color Variations in _variables.scss
	@each $i in $color-list {
		$alt-color: nth($i, 3);
		&.#{nth($i, 2)}-#{nth($i, 1)} {
			color: $alt-color;
			border-color: $alt-color;
			&:hover {
				border-color: $black;
				color: $black;
			}
		}
	}

	// Button Size (small or normal (or no value) )
	@if $button-size == small {
		@include font-size(13);
		padding: 6px 30px 3px;
	} @else {
		&.button-small {
			font-size: 13px;
			padding: 6px 30px 3px;
		}
	}

	// Button Fill
	// solid: color is the filled background color w/white text
	// normal or no value: color is the border & text color
	@if $button-type == solid {
		background: $button-color;
		color: $light;
		@if $button-color == $light {
			color: $dark !important;
		}
		&:hover {
			border-color: $dark;
			background: $dark;
			color: $light;
		}
	} @else {
		&.button-solid {
			background: $button-color;
			color: $white;
			@each $i in $color-list {
				$alt-color: nth($i, 3);
				&.#{nth($i, 2)}-#{nth($i, 1)} {
					background: $alt-color;
					@if $alt-color == $white {
						color: $black;
					}
				}
			}
			&:hover {
				border-color: $black;
				background: $black;
				color: $white;
			}
		}
	}

	// Button Border
	// bordered: border is white
	// normal or no value: border is colored
	@if $button-border == bordered {
		border-color: $white !important;
		&:hover {
			border-color: $black;
		}
	} @else {
		&.button-bordered { border-color: $white !important; }
	}
}


/**
* button draw-border hover effect : Drawing effect
* -------------------------------------------------------------------
* Usage:
* .draw-border { @include btn-border-drawing(#58afd1, #ffe593, 4px, bottom, right); }
*/

@mixin btn-border-drawing($color: #ccc, $hover: black, $width: 2px, $vertical: top, $horizontal: left, $duration: 0.25s) {
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration $duration/3;
  position: relative;
  
  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: '';
    pointer-events: none;
    position: absolute;
    width: 0; height: 0;
    
    #{$vertical}: 0; 
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == 'left', 'right', 'left');
    
    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }
  
  &::after {
    $v-side: if($vertical == 'top', 'bottom', 'top');
    
    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }
  
  &:hover {
    color: $hover;
    
    &::before,
    &::after {
      border-color: $hover;
      transition: border-color 0s, width $duration, height $duration;
      width: 100%;
      height: 100%;
    }
    
    &::before { transition-delay: 0s, 0s, $duration; }
    
    &::after { transition-delay: 0s, $duration, 0s; }
  }
}


/**
* Buttons Colour Functions
* -------------------------------------------------------------------
* Usage:
* .button-purple  { @include buttonColors($violet-base); }
*/

//Base Color
$violet-base: #A200FF;

//Mixin for Button Properties: Border + Background-Color
@mixin buttonColorProperties($color) {
    $border: adjust-hue($color, -6deg);
    background-color: $color; 
    border: 3px solid $border;
}

//Mixin that applies the above color properties 
@mixin buttonColors($baseColor) {
    @include buttonColorProperties($baseColor);
  
    &:hover {
      $base-hover: darken($baseColor, 30);
      
      @include buttonColorProperties($base-hover);
      transition: all 0.25s;
    }
}