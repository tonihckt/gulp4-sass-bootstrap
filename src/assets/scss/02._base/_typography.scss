/*!
 *
 * ======================================================================
 * 00. TYPOGRAPRY
 * ======================================================================
 * 
 */

//  @function calculateRem($size) {
//   $remSize: $size / 16px;
//   @return $remSize * 1rem;
// }

// @mixin font-size($size) {
//   font-size: $size;
//   font-size: calculateRem($size);
// }


  /**
   * ADD FONTS
   * -------------------------------------------------------------------
   *
   */
  
  // // ==> COOPERHEWITT

// @include font-face('Cooper Hewitt Bold', 'CooperHewitt/CooperHewitt-Bold', bold, normal);
// @include font-face('Cooper Hewitt', 'CooperHewitt/CooperHewitt-BoldItalic', bold, italic);
// @include font-face('Cooper Hewitt Book', 'CooperHewitt/CooperHewitt-Book', book, normal);
// @include font-face('Cooper Hewitt', 'CooperHewitt/CooperHewitt-BookItalic', book, italic);

// // ==> QONTA
// @include font-face('Qontra', 'Qontra/Qontra', normal, normal);


// // BALOO BHAINA 2 ( font-family: 'Baloo Bhaina 2', cursive;)
// @import url('https://fonts.googleapis.com/css2?family=Baloo+Bhaina+2:wght@400;500;600;700;800&display=swap');



$font-list: (
  (
    // Set the name of the font
    name: "Open Sans",
    // Set the font stub (same as the font name, but URL safe)
    stub: "Open+Sans",
    // Set the rest of the font family
    family: "sans-serif",
    // Set the class prefix
    class: 'open-sans',
    // Set the font weights, styles and variants
    styles: (300, 300i, 400, 400i, 600, 600i, 700, 700i, 800, 800i)
  ),
  (
    name: "Roboto",
    stub: "Roboto",
    family: "Helvetica, sans-serif",
    class: 'roboto',
    styles: (100, 100i, 300, 300i, 400, 400i, 500, 500i, 700, 700i, 900, 900i)
  ),
  (
    name: "Lato",
    stub: "Lato",
    family: "sans-serif",
    class: 'lato',
    styles: (100, 100i, 300, 300i, 400, 400i, 700, 700i, 900, 900i)
  ),
  (
    name: "Merriweather",
    stub: "Merriweather",
    family: "'Times New Roman', serif",
    class: 'merriweather',
    styles: (300, 300i, 400, 400i, 700, 700i, 900, 900i)
  )
);

@include google-fonts($font-list, true);


// body {
// 	font: 9pt/1.5em sans-serif;
// }
// pre, code, tt {
// 	font: 1em/1.5em 'Andale Mono', 'Lucida Console', monospace;
// }
// h1, h2, h3, h4, h5, h6, b, strong {
// 	font-weight: bold;
// }
// em, i, dfn {
// 	font-style: italic;
// }
// dfn {
// 	font-weight:bold;
// }
// p, code, pre, kbd {
// 	margin:0 0 1.5em 0;
// }
// blockquote {
// 	margin:0 1.5em 1.5em 1.5em;
// }
// cite {
// 	font-style: italic;
// }
// li ul, li ol {
// 	margin:0 1.5em;
// }
// ul, ol {
// 	margin:0 1.5em 1.5em 1.5em;
// }
// ul {
// 	list-style-type:disc;
// }
// ol {
// 	list-style-type:decimal;
// }
// ol ol {
// 	list-style: upper-alpha;
// }
// ol ol ol {
// 	list-style: lower-roman;
// }
// ol ol ol ol {
// 	list-style: lower-alpha;
// }
// dl {
// 	margin:0 0 1.5em 0;
// }
// dl dt {
// 	font-weight:bold;
// }
// dd {
// 	margin-left:1.5em;
// }
// table {
// 	margin-bottom:1.4em;
// 	width:100%;
// }
// th {
// 	font-weight:bold;
// }
// th, td, caption {
// 	padding:4px 10px 4px 5px;
// }
// tfoot {
// 	font-style:italic;
// }
// sup, sub {
// 	line-height:0;
// }
// abbr, acronym {
// 	border-bottom: 1px dotted;
// }
// address {
// 	margin:0 0 1.5em;
// 	font-style:italic;
// }
// del {
// 	text-decoration: line-through;
// }
// pre {
// 	margin:1.5em 0;
// 	white-space:pre;
// }
// img.centered, .aligncenter, div.aligncenter {
// 	display: block;
// 	margin-left: auto;
// 	margin-right: auto;
// }
// img.alignright {
// 	display: inline;
// }
// img.alignleft {
// 	display: inline;
// }
// .alignright {
// 	float: right;
// 	margin-left: 10px;
// }
// .alignleft {
// 	float: left;
// 	margin-right: 10px;
// }
// img {
// 	max-width: 100%;
// }
// * html .clearfix {
//     height: 1%;
// }
// * + html .clearfix {
// 	display: inline-block;
// }
// .clearfix:after {
//     content: ".";
//     display: block;
//     height: 0;
//     clear: both;
//     visibility: hidden;
// }
// * html .group {
//     height: 1%;
// }
// * + html .group {
// 	display: inline-block;
// }
// .group:after {
//     content: ".";
//     display: block;
//     height: 0;
//     clear: both;
//     visibility: hidden;
// }

// $font-stack: (
//   decorative: #{'oswald', Helvetica, sans-serif},
//   general: #{'Helvetica Neue', Helvetica, Arial, sans-serif}
// ); 


  /**
   *  Web font variables
   * -------------------------------------------------------------------
   *
   */
// Web font URLs
$font-google-prim : 'http://fonts.googleapis.com/css?family=Lato:100,300,400';
$font-google-sec  : 'http://fonts.googleapis.com/css?family=PT+Serif:400,700';


@if variable-exists(font-google-prim) {
  @import url($font-google-prim);
}
@if variable-exists(font-google-sec) {
  @import url($font-google-sec);
}

// Font Stacks
$stack-lato     : 'Lato', sans-serif;
$stack-pt-serif : 'PT Serif', serif;

  /**
   *  Title Border 
   * -------------------------------------------------------------------
   * To apply a decorative border beneath a title
   * use: .heading { @include title-border($color:#c20e9b); }
   * use: .heading { @include title-border(#6d9eeb, 10px, 100%); }
   */
@mixin title-border($color:#27ae60, $height:4px, $width:50%) {
	&:after {
        border-bottom: $height solid $color;
        content: "";
        display: block;
        margin: 0 auto;
        padding-bottom: 15px;
        width: $width;
    }
}

//.link { @include link(#2980b9) }
@mixin link($color-link) {
  text-decoration: none;
  color: $color-link;
}



@mixin visually-hidden() {
  position: absolute !important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

  /**
   *  converts px values into em values
   * -------------------------------------------------------------------
   * h1 { font-size: em(72); }
   * https://www.shopify.co.uk/partners/blog/a-beginners-guide-to-sass-with-shopify-part-2-making-stylesheets-smarter-with-sass-mixins-and-functions
   */

$browser-context: 16; // default

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em
}