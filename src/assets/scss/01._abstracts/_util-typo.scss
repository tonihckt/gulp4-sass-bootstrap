/*!
 *
 * ======================================================================
 * 00. TYPOGRAPHY UTILITIES
 * ======================================================================
 * 
 * https://dev.to/royalfig/easy-responsive-typography-507a
 */


 /**
 * STRING REPLACE
 * -------------------------------------------------------------------
 */

//  @function str-replace($string, $search, $replace: "") {
//     $index: str-index($string, $search);
//     @if $index {
//         @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
//     }
//     @return $string;
// }


 /**
 * FONT FACE
 * -------------------------------------------------------------------
 * @include font-face(Samplino, fonts/Samplino);
 * @include font-face("Samplina Neue", fonts/SamplinaNeue, bold, italic);
 * @include font-face(Samplinoff, fonts/Samplinoff, null, null, woff);
 * @include font-face(Samplinal, fonts/Samplinal, 500, normal, eot woff2 woff);
 */

//  @mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
//     $src: null;
//     $extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_") );
//     $formats: ( otf: "opentype", ttf: "truetype" );
//     @each $ext in $exts {
//         $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
//         $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
//         $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
//     }
//     @font-face {
//         font-family: quote($name);
//         font-style: $style;
//         font-weight: $weight;
//         src: $src;
//     }
// }

/**
 * FONT FACE
 * -------------------------------------------------------------------
 * This following font-face mixin, you can make that tedious task much faster. 
 * Make sure that you use the right file path within the url() function.
 *
 * Genrate-font-face: 
 * https://onlinefontconverter.com/
 * https://www.font-converter.net/en
 * 
 * @include font-face("My Font", my-font);
 *
 * use: @include font-face('Arial Narrow', 'ArialNarrow/ArialNarrow', normal, normal);
 * use: @include font-face('Arial Narrow', 'ArialNarrow/ArialNarrow_bolditalic', bold, italic);
 *
 */

// @mixin font-face($name, $file) {
//     @font-face {
//     font-family: "#{$name}";
//     src: url("../fonts/#{$file}.eot");
//     src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"),
//     url("../fonts/#{$file}.woff") format("woff"),
//     url("../fonts/#{$file}.ttf") format("truetype"),
//     url("../fonts/#{$file}.svg?#webfont") format("svg");
//   }
//  }

/// Works with several parameters
@mixin font-face($font-family, $file-name, $font-weight: normal, $font-style: normal) {
    $file-path-dir: '../fonts';
    // $file-path-dir: $fontsUrl;
  
    @font-face {
      font-family: '#{$font-family}';
  
      src:  url('#{$file-path-dir}/#{$file-name}.eot'); /* IE9 Compat Modes */
      src:  url('#{$file-path-dir}/#{$file-name}.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
            url('#{$file-path-dir}/#{$file-name}.woff2') format('woff2'), /* Modern Browsers */
            url('#{$file-path-dir}/#{$file-name}.woff') format('woff'), /* Modern Browsers */
            url('#{$file-path-dir}/#{$file-name}.ttf') format('truetype'), /* Safari, Android, iOS */
            // url('#{$file-path-dir}/#{$file-name}.otf') format('opentype'), /* Old Microsoft (?)*/
            url('#{$file-path-dir}/#{$file-name}.svg?#webfont') format('svg'); /* Legacy iOS */
            
      font-weight: '#{$font-weight}';
      font-style: '#{$font-style}';    
    }
  }
  

/**
 * ADD GOOGLE FONT 
 * -------------------------------------------------------------------
 */


  //
// SCSS mixin for adding Google Fonts to your project by generating a single @import
// rule based on a SCSS map (see $font-list below for an example, which includes all
// of the font weights and styles for Open Sans, Roboto, Lato and Merriweather).
//
// Optionally generate helper classes in order to make using Google Fonts even easier.
//
// Developed by Donny Burnside (http://www.donnyburnside.com/)
// Do what you like with it.
//

@mixin google-fonts($fonts, $generate_classes: true) {
  $base_url: "//fonts.googleapis.com/css?family=";

  @for $i from 1 through length($fonts) {
    $font: nth($fonts, $i);
    $font-name: map-get($font, name);
    $font-stub: map-get($font, stub);
    $font-family: #{"'" + $font-name + "', " + map-get($font, family)};
    $font-class: map-get($font, class);
    $font-styles: map-get($font, styles);

    // Add pipe seperator
    @if $i > 1 {
      $base_url: $base_url + '|';
    }

    // Add font name to url
    $base_url: $base_url + $font-stub;

    // Generate classes
    @if $generate_classes == true {
      .#{$font-class} {
        font-family: $font-family;
      }
    }

    // Add font styles
    @for $n from 1 through length($font-styles) {
      $font-style: nth($font-styles, $n);
      $font-style-italic: if( str-index(#{$font-style}, i), true, false);
      $font-weight: if( str-index(#{$font-style}, i), str-slice( #{$font-style}, 1, str-index(#{$font-style}, i) - 1 ), $font-style);
      $font-style-class: $font-class + "-" + $font-style;

      // Prefix font style rules
      @if $n == 1 {
        // Add colon prefix
        $base_url: $base_url + ':';
      } @else if $n > 1 {
        // Add comma seperator
        $base_url: $base_url + ',';
      }

      // Add font style to url
      $base_url: $base_url + $font-style;

      // Generate classes
      @if $generate_classes == true {
        .#{$font-style-class} {
          font-family: $font-family;

          // Add weight
          font-weight: $font-weight;

          // Add italics
          @if $font-style-italic {
            font-style: italic;
          }
        }
      }
    }
  }

  // Output the @import rule
  @import url('#{$base_url}');
}


 /**
 * FONT SIZE CONFIGURATION
 * -------------------------------------------------------------------
 *
 *
 * ===== Usage ===== 
 * .element{@include font-size(12, 18, 1.2);}
 */

 @mixin font-size($font-size, $line-height: normal, $letter-spacing: normal) {
  font-size: $font-size * 1px;
  // font-size: $font-size * 0.1rem;
  // example using rem values and 62.5% font-size so 1rem = 10px

  @if $line-height==normal {
    line-height: normal;
  } @else {
    line-height: $line-height / $font-size;
  }

  @if $letter-spacing==normal {
    letter-spacing: normal;
  } @else {
    letter-spacing: #{$letter-spacing / $font-size}em;
  }
}



 /**
 * DEFINE FONT 
 * -------------------------------------------------------------------
 *
 * .element{@include useFont('Roboto');}
 */

 @mixin useFont(
  $fontName: '',
  $fontWeight: 400
) {
  $fallbackFonts: 'Arial, Helvetica, sans-serif';

  @if($fontName == 'Roboto'){
    $fontName: 'Roboto, #{$fallbackFonts}';
  }

  @if($fontName == 'Comic San') {
    $fontName: 'Comic Sans, #{$fallbackFonts}'
  }

  @if($fontName == '') {
    $fontName: $fallbackFonts;
  }

  font-family: "#{$fontName}";
  font-weight: $fontWeight;
}

 /**
 * FONT SIZE 
 * -------------------------------------------------------------------
 *
 * ===== Usage ===== 
 * h2 { @include heading(large); }
 * h4 { @include heading(medium); }
 * p { @include heading(hi); }
 */

@mixin heading($size) {
  @if($size == large) {
      font-size: 40px;
  } @else if ($size == medium) {
      font-size: 24px;
  } @else if ($size == small) {
      font-size: 18px;
  } @else {
      font-size: 16px;
  }
}



/**
 * VIEWPORT-RELATIVE HEADINGS 
 * -------------------------------------------------------------------
 * USE: .headline { font-size: get-vw(72px); }
 */

 /// -> basic function
  @function get-vw($target) { 
  $vw-context: (1000*.01) * 1px;
  @return ($target/$vw-context) * 1vw;
}

//  $wide-screen: "(min-width: 1025px)"; 
 // Breakpoint variables
$max-breakpoint: 1025;
// Media query variables
$wide-screen : "(min-width: #{$max-breakpoint}px)"; 

@function get-vw-bp($target) {
  $vw-context: ($max-breakpoint*.01) * 1px;
  @return ($target/$vw-context) * 1vw;
}

// => Creating a mixin
// USE: .headline { font-size: 4.5em; @include vw(72px); }
@mixin vw($size) {
  font-size: get-vw-bp($size);
  // Prevent font-size from getting too big
  @media #{$wide-screen} {
    font-size: $size;
  }
}



/**
 * TEXT EFFECT
 * -------------------------------------------------------------------
 *
 */


@mixin text-effect($val) {
  @if $val == danger {
    color: red;
  }
  @else if $val == alert {
    color: yellow;
  }
  @else if $val == success {
    color: green;
  }
  @else {
    color: black;
  }
}

/**
 * BOLD
 * -------------------------------------------------------------------
 *
 */


// @mixin make-bold($bool) {
//   @if $bool == true {
//     font-weight: bold;
//   }
// }



/**
 * LINKS MIXINS
 * -------------------------------------------------------------------
 *
 * .element { @include link-color(orange, blue, yellow, teal); }
 */

 @mixin link-color ($link, $visited, $hover, $active) {
  & {
      color: $link;
      &:visited {
          color: $visited;
      }
      &:hover {
          color: $hover;
      }
      &:active, &:focus {
          color: $active;
      }
  }
}



/**
 * text-selection
 * -------------------------------------------------------------------
 *
 * use: @include text-selection(#f0f, #222);
 */


@mixin text-selection($bgcolor, $color){
  ::-moz-selection{
      background-color: $bgcolor;
      color: $color;
  }
  ::selection{
      background-color: $bgcolor;
      color: $color;
  }
}