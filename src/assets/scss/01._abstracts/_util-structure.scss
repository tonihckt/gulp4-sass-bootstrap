//https://thoughtbot.com/blog/nesting-grids-with-neat-2
// https://thoughtbot.com/blog/introducing-bourbon-neat-a-sass-based-responsive-grid

// https://thoughtbot.com/blog/getting-all-your-ducks-in-a-column

// Columns
$one: 8.33%;
$two: 16.667%;
$three: 25%;
$four: 33.333%;
$five: 41.667%;
$six: 50%;
$seven: 58.333%;
$eight: 66.667%;
$nine: 75%;
$ten: 83.333%;
$eleven: 91.667%;
$twelve: 100%;


// COLUMNS -> .col-1
@for $i from 1 through 4{
    .col-#{$i} {
       width: 100% / $i;
    }
  }

//   $i: 1;
//   @while $i < 5 {
//     .col-#{$i} {
//        width: 100% / $i;
//     }
//     $i: $i + 1;
//   }

//flexbox-card
$max-width : 1200px;
$gutter    : 10px;

// Convert px to %
@function px-to-pc($target, $context: $max-width) {
  @return ($target/$context) * 100%;
}

// Calculate flex-basis with flexible margins
@function per-line($items) {
  $g-pct  : px-to-pc($gutter) * 2;
  $g-total: $items * $g-pct;
  @return (100% / $items) - $g-total;
}

 /**
 * LAYOUT-GRID
 * -------------------------------------------------------------------
 // https://www.red-gate.com/simple-talk/dotnet/asp-net/refactoring-css-with-sass-and-compass/
 */

$layout-width: 980px;
$gutter:24px; 
$small-device-width: 767px; 
$vertical-whitespace: 20px; 
 
* { 
   -webkit-box-sizing: border-box; 
   -moz-box-sizing: border-box; 
   box-sizing: border-box; 
} 
 
.grid { 
   margin: 0 auto; 
   max-width: $layout-width; 
   *zoom: 1; 
   padding: $vertical-whitespace 0; 
   &:after { 
      content: ""; 
      display: table; 
      clear: both; 
   } 
   .col { 
      float: left; 
      padding: 0 $gutter; 
      &.full { 
         width: 100%; 
      } 
      &.half { 
         width: 50%; 
      } 
      &.quarter { 
         width: 25%; 
      } 
      &.third { 
         width: 33.33%; 
      } 
      &.two-thirds { 
         width: 66.66%; 
      } 
   } 
} 
@media only screen and (max-width: $small-device-width) { 
   /* Small Device Styles here */ 
   .grid .col { 
      float: none; 
      width: auto !important; 
      padding: 0 !important; 
   } 
}


 /**
 * LAYOUT-GRID-12COLUMNS
 * -------------------------------------------------------------------
 // (target+context) x 100 = result %
 // https://books.google.es/books?id=y-9wCgAAQBAJ&pg=PA146&lpg=PA146&dq=create+box+mixin+scss&source=bl&ots=QPz5kKkqUI&sig=ACfU3U1PByQmRLFbnSNCmnhP1R2AgKD5xA&hl=gl&sa=X&ved=2ahUKEwjSxcSH3p3qAhUrxIUKHXEGDdk4RhDoATACegQIChAB#v=onepage&q=create%20box%20mixin%20scss&f=false
 */

.grid{
  &-1{width:6.67%;}
  &-2{width:15%;}
  &-3{width:23.33%;}
  &-4{width:31.67%;}
  &-5{width:40%;}
  &-6{width:48.33%;}
  &-7{width:56.67%;}
  &-8{width:65%;}
  &-9{width:73.33%;}
  &-10{width:81.67%;}
  &-11{width:90%;}
  &-12{width:98.33%;}
}


 /**
 * CREATE-COL
 * -------------------------------------------------------------------
 // https://www.red-gate.com/simple-talk/dotnet/asp-net/refactoring-css-with-sass-and-compass/
 */

 //.element {@include row;}
 //.element.subelement {@include col(1, 3, $align: middle); } 
 //.element.subelement { @include col(1, 2); }


 // This is mixin which you will include in parent
// of columns. It kills default margin of inline-block
// elements.
@mixin row () {
  font-size: 0;
}

// This is column mixins.
@mixin col ($col, $sum, $gap: 1em, $align: top, $first: false, $last: false) {
  width: 100%;
  display: inline-block;
  font-size: 16px;
  padding-left: if($first, 0, $gap);
  padding-right: if($last, 0, $gap);

  @media only screen and (min-width: 768px) {
          width: percentage($col/$sum);
          vertical-align: $align;
  }

  &.fluid { width: percentage($col/$sum); }
}
