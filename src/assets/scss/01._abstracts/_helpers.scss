/*!
 *
 * ======================================================================
 * 00.HELPERS
 * ======================================================================
 * 
 */

/**
 * CONVERT REM
 * -------------------------------------------------------------------
 */
// Variable Font size rem & px
// @mixin fz($size: 24, $base: 16){
//     // font-size: $size + px
//     font-size: ($size / ($base * 0.625)) + rem
// }


/**
 * CONTAINER
 * -------------------------------------------------------------------
 */
 @mixin container($ancho, $alto, $color) {
  width: $ancho;
  height: $alto;
  background-color: $color;
  border-radius: 5%;
  text-align: center;
  margin: 5px;
}

/**
* FLEX
* -------------------------------------------------------------------
* .centered-elements{@include flex-center(); border: 1px solid gray}
*/
@mixin flex-center {
  display: -webkit-flex;
  display: flex;
  justify-content: center;
  align-items: center;
}

/**
* ROTATE
* -------------------------------------------------------------------
* .rotate-elements{@include rotate(45eg);}
*/
@mixin rotate($degree) {
  -webit-transform:rotate($degree); // Webkit-based
  -moz-transform:rotate($degree); // Firefox
  -ms-transform:rotate($degree); // Internet Explore
  -o-transform:rotate($degree); // Opera
  transform:rotate($degree); // Standar Css
}

/**
* ZEBRA
* -------------------------------------------------------------------
* {@include zebra();}
*/
@mixin zebra() {
  @for $i from 1 through 7 {
    @if ($i % 2 == 1){
      .stripe-#{$i}{
        background-color: black;
        color: white;
      }
    }
  }
}

/**
* PADDING > MARGIN
* -------------------------------------------------------------------
* @mixin that will choose padding sizing if itâ€™s greater than the margin
* .container{@include spacing(10px, 20px}
*/

@mixin spacing($padding, $margin) {
  @if($padding > $margin){
    padding: $padding;
  } @else {
    padding: $margin;
  }
}

/**
* BUTTON -> CHANGES COLOR
* -------------------------------------------------------------------
* @mixin Changes its background color based on its width.
* .button{@include buttom-color(20px, 30px}
*/

@mixin buttom-color($height, $width) {
  @if(($height > $width) and ($width >= 35px)){
    background-color: blue;
  } @else {
    background-color: red;
  }
}

/**
* BOX-SHADOW
* -------------------------------------------------------------------
* div{@include box-shadow(0, 5px, 5px, rgba(0, 0, 0, 0.7));}
*/
@mixin box-shadow($x, $y, $blur, $spread) {
  -webkit-box-shadow: $x $y $blur $spread;
  -moz-box-shadow: $x $y $blur $spread;
  -ms-box-shadow: $x $y $blur $spread;
  box-shadow: $x $y $blur $spread;
}

/**
* COLORS OF STATES
* -------------------------------------------------------------------
* .heading {@include color-state(error);}
*/
@mixin color-state($val) {
  @if $val == error {
    color: $clr-error;
  }
  @else if $val == warning {
    color: $clr-warning;
  }
  @else if $val == success {
    color: $clr-success;
  }
  @else {
    color: $clr-default
  }
}


 /**
 * VERTICALLY ALIGNING ELEMENTS
 * -------------------------------------------------------------------
 * mixin usage: @include center-elements(both); | @include center-elements(vert);
 */

 @mixin center-elements($center-all) {
  position: absolute;
  @if $center-all == both {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
  @else {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
}


/**
* BORDER
* -------------------------------------------------------------------
* Add a border to one side or three sides
*
* .border-all { @include border(5px,solid,#0080FF,all); }
* .border-less-bottom { @include border(5px,solid,#0080FF,all,bottom); }
* .border-top { @include border(5px,dashed,#0080FF,top); }
*/

@mixin border(
    $border-size: 1px,
    $border-pattern: solid,
    $border-color: black,
    $border-position: all,
    $border-clear: none ) {
  @if $border-position == all {
    border: $border-size $border-pattern $border-color;
  }
  @else {
    border-#{$border-position}: $border-size
    $border-pattern $border-color;
  }
  @if $border-clear == none {
    $border-position: all;
  }
  @else {
    border-#{$border-clear}: none;
  }
}

/**
* BORDER RADIUS
* -------------------------------------------------------------------
* .element { @include border-radius(1em); }
* .element { @include border-radius(25px,5px,25px,5px); }
*/

@mixin border-radius($top-left:10px, $top-right:null, $bottom-right:null, $bottom-left:null){
  -webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
     -moz-border-radius: $top-left $top-right $bottom-right $bottom-left;
      -ms-border-radius: $top-left $top-right $bottom-right $bottom-left;
          border-radius: $top-left $top-right $bottom-right $bottom-left;  
}

/**
* TRANSITION ALL
* -------------------------------------------------------------------
* Animate properties like color, width and padding to create fade and scale effects.
*
* .element.fade { @include transition(all,0.5s,ease-out); }
* .element.scale { @include transition(all,0.3s,ease-out); }
*/

@mixin all-transition($what: all, $time: 0.2s, $how: ease-in-out) {
  -webkit-transition: $what $time $how;
  -moz-transition:    $what $time $how;
  -ms-transition:     $what $time $how;
  -o-transition:      $what $time $how;
  transition:         $what $time $how;
}

/**
* OPACITY
* -------------------------------------------------------------------
* 
* .element.sevenfive { @include opacity(0.75); }
*/

@mixin opacity($opacity: 0.5) {
  $opacityPercentage: ($opacity * 100);
  filter: alpha(opacity=$opacityPercentage); //IE8
  opacity: $opacity;
}

/**
* TEXT SHADOW
* -------------------------------------------------------------------
* Add a basic shadow behind your text, or to create a unique effect 
*
* .element{ @include text-shadow(2px,2px,2px,rgba(0,0,0,.25)); }
* .element{ @include text-shadow(-1px,-2px,3px,#00FFFF, 1px,2px,3px,#0080FF); }
*/

@mixin text-shadow($x1:2px, $y1:2px, $blur1:5px, $color1:black, $x2:null, $y2:null, $blur2:null, $color2:null){
  @if ($x2) {
   text-shadow: $x1 $y1 $blur1 $color1, $x2 $y2 $blur2 $color2; 
  }
  @else {
    text-shadow: $x1 $y1 $blur1 $color1;
  }
}


/**
* TRANSFORM ROTATE
* -------------------------------------------------------------------
* Add a basic shadow behind your text, or to create a unique effect 
*
* .element{   @include rotate(180, 0.00000000, 1.00000000, -1.00000000, 0.00000000); }
*/

@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  -webkit-transform: rotate($deg + deg);
  -moz-transform: rotate($deg + deg);
  -ms-transform: rotate($deg + deg);
  -o-transform: rotate($deg + deg);
  transform: rotate($deg + deg);
  filter: progid:DXImageTransform.Microsoft.Matrix(
       M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}


/**
* BACKGROUND IMAGE --- (por ver)
* -------------------------------------------------------------------
*
* .element.icon { @include background-image("header.png", right, $black); }
*/

$imgpath--rel : '../../images/';

@mixin background-image($img, $background-position, $background-color) {
  background-image: url('#{$imgpath--rel}/#{$img}');
  background-repeat: no-repeat;
  background-position: $background-position;
  background-color: $background-color ;
} 


/**
* SQUARE
* -------------------------------------------------------------------
*
* .element.square { @include square(100px, $radius: 4px); }
*/

@mixin square($size, $radius: 0) {
  width: $size;
  height: $size;

  @if $radius != 0 {
    border-radius: $radius;
  }
}

/*REPLACE TEXT
* -------------------------------------------------------------------
*
* .element.icon { @include replace-text(url("../../images/mail.svg"), 0); }
*/

@mixin replace-text($image, $x: 50%, $y: 50%) {
  text-indent: -99999em;
  overflow: hidden;
  text-align: left;

  background: {
    image: $image;
    repeat: no-repeat;
    position: $x $y;
  }
}

/**
* TINYMCE IMAGE
* -------------------------------------------------------------------
* Managing image position
* Margins and text runaround when working with WYSWIYG HTML editors, like TinyMCE
*
* .element{ @include tinymce-img(); }
*/

@mixin tinymce-img {
  img {
    margin: 0.5em 2em 1em 0;
  }
  img[style*="float: left"], img.left {
    float: left;
    margin: 0.5em 2em 1em 0;
    max-width: 50%;
  }
  img[style*="float: right"], img.right {
    margin: 0.5em 0 1em 2em;
    float: right;
  }
  .captionImage.right {
    float: right; clear: right;
    margin: 0 0 1em 2em;
  }
  .captionImage.left {
    float: left; clear: left;
    margin: 0 2em 1em 0;
  }
  .captionImage img.left {
    max-width: 100% !important;
    width: 100% !important;
    margin-right: 0;
  }
  .captionImage img.right {
    max-width: 100% !important;
    width: 100% !important;
    margin-left: 0;
  }

@media print, screen and (min-width: 640px) {
  img[style*="float: left"], img.left, .captionImage.left {
    max-width: 50%;
  }
  img[style*="float: right"], img.right, .captionImage.right {
    max-width: 50%;
  }
}
@media print, screen and (min-width: 1280px) {
  img[style*="float: left"], img.left, .captionImage.left {
    max-width: 75%;
  }
  img[style*="float: right"], img.right, .captionImage.right {
    max-width: 75%;
  }
}
}


/**
* INPUT PLACEHOLDER
* -------------------------------------------------------------------
* .placeholder { @include placeholder { color: #0066CC; background: #ccffff; } }
*/

@mixin placeholder() {
  input::-webkit-input-placeholder {@content}
  input:-moz-placeholder           {@content}
  input::-moz-placeholder          {@content}
  input:-ms-input-placeholder      {@content}
}
